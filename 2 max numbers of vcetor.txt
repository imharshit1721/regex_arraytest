
//2.Write a function findMaxPrefix(arr) that takes the prefix sum array from the previous function(you solved in ques 1 ) and returns the maximum value in the array.
//Input: [3, 4, 8, 10, 15] Output: 15



#include<iostream>
#include<bits/stdc++.h>
using namespace std;

vector<int> computePrefixSum(int arr[] , int n){
       vector<int> arr_1;
       
      
      int sum = 0;
     
      for(int i = 0; i < n; i++){
          sum = sum + arr[i];
          arr_1.push_back(sum);
      }
      
      return arr_1;
}
void show_vector(vector <int> vec){
    for(auto it: vec){
        cout<<it<<" ";
    }
    cout<<"\n";
}

int max1(vector<int> arr , int max){
    int maximum = max;
    for(auto it: arr){
        if(it > maximum){
            maximum = it;
        }
    }
    return maximum;
}

int main(){
    int arr_1[] = {3, 1, 4, 2, 5};
    int n  = sizeof(arr_1)/sizeof(arr_1[0]);
    vector<int> arr_2 = computePrefixSum(arr_1 , n); 
     /*
     for(auto it: arr_2){
         cout<<it<<" ";
     }
     
     */
    show_vector(arr_2);
    int max = arr_2[0];
    int maximum = max1(arr_2 , n);
    cout<<"Maximum number is "<<maximum<<"\n ";
    
}


